{"ast":null,"code":"var _jsxFileName = \"/Users/saran/Documents/Google-Maps---React-js/src/components/Map.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nconst style = {\n  width: \"83.2vw\",\n  height: \"75vh\",\n  marginLeft: \"auto\",\n  marginRight: \"auto\"\n};\n\nclass Map extends React.Component {\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.location !== this.props.location) {\n      this.map.fitBounds(this.props.location.geometry.viewport);\n      this.marker.setPosition(this.props.location.geometry.location);\n      this.marker.setVisible(true);\n    }\n  }\n\n  componentDidMount() {\n    const maps = window.google.maps;\n    const mapRef = this.refs.map;\n    const node = ReactDOM.findDOMNode(mapRef);\n    let zoom = 14;\n    let lat = 37.774929;\n    let lng = -122.419416;\n    const center = new maps.LatLng(lat, lng);\n    const mapConfig = Object.assign({}, {\n      center: center,\n      zoom: zoom,\n      fullscreenControl: false,\n      streetViewControl: false\n    });\n    this.map = new maps.Map(node, mapConfig);\n    this.marker = new window.google.maps.Marker({\n      map: this.map,\n      anchorPoint: new window.google.maps.Point(0, -29)\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      style: style,\n      id: \"map\",\n      className: \"map\",\n      ref: \"map\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    });\n  }\n\n}\n\nexport default Map;","map":{"version":3,"sources":["/Users/saran/Documents/Google-Maps---React-js/src/components/Map.js"],"names":["React","ReactDOM","style","width","height","marginLeft","marginRight","Map","Component","componentDidUpdate","prevProps","prevState","location","props","map","fitBounds","geometry","viewport","marker","setPosition","setVisible","componentDidMount","maps","window","google","mapRef","refs","node","findDOMNode","zoom","lat","lng","center","LatLng","mapConfig","Object","assign","fullscreenControl","streetViewControl","Marker","anchorPoint","Point","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,MAAMC,KAAK,GAAG;AACZC,EAAAA,KAAK,EAAE,QADK;AAEZC,EAAAA,MAAM,EAAE,MAFI;AAGZC,EAAAA,UAAU,EAAE,MAHA;AAIZC,EAAAA,WAAW,EAAE;AAJD,CAAd;;AAMA,MAAMC,GAAN,SAAkBP,KAAK,CAACQ,SAAxB,CAAkC;AAChCC,EAAAA,kBAAkB,CAACC,SAAD,EAAYC,SAAZ,EAAuB;AACvC,QAAID,SAAS,CAACE,QAAV,KAAuB,KAAKC,KAAL,CAAWD,QAAtC,EAAgD;AAC9C,WAAKE,GAAL,CAASC,SAAT,CAAmB,KAAKF,KAAL,CAAWD,QAAX,CAAoBI,QAApB,CAA6BC,QAAhD;AACA,WAAKC,MAAL,CAAYC,WAAZ,CAAwB,KAAKN,KAAL,CAAWD,QAAX,CAAoBI,QAApB,CAA6BJ,QAArD;AACA,WAAKM,MAAL,CAAYE,UAAZ,CAAuB,IAAvB;AACD;AACF;;AACDC,EAAAA,iBAAiB,GAAG;AAClB,UAAMC,IAAI,GAAGC,MAAM,CAACC,MAAP,CAAcF,IAA3B;AACA,UAAMG,MAAM,GAAG,KAAKC,IAAL,CAAUZ,GAAzB;AACA,UAAMa,IAAI,GAAG1B,QAAQ,CAAC2B,WAAT,CAAqBH,MAArB,CAAb;AACA,QAAII,IAAI,GAAG,EAAX;AACA,QAAIC,GAAG,GAAG,SAAV;AACA,QAAIC,GAAG,GAAG,CAAC,UAAX;AACA,UAAMC,MAAM,GAAG,IAAIV,IAAI,CAACW,MAAT,CAAgBH,GAAhB,EAAqBC,GAArB,CAAf;AACA,UAAMG,SAAS,GAAGC,MAAM,CAACC,MAAP,CAChB,EADgB,EAEhB;AACEJ,MAAAA,MAAM,EAAEA,MADV;AAEEH,MAAAA,IAAI,EAAEA,IAFR;AAGEQ,MAAAA,iBAAiB,EAAE,KAHrB;AAIEC,MAAAA,iBAAiB,EAAE;AAJrB,KAFgB,CAAlB;AASA,SAAKxB,GAAL,GAAW,IAAIQ,IAAI,CAACf,GAAT,CAAaoB,IAAb,EAAmBO,SAAnB,CAAX;AACA,SAAKhB,MAAL,GAAc,IAAIK,MAAM,CAACC,MAAP,CAAcF,IAAd,CAAmBiB,MAAvB,CAA8B;AAC1CzB,MAAAA,GAAG,EAAE,KAAKA,GADgC;AAE1C0B,MAAAA,WAAW,EAAE,IAAIjB,MAAM,CAACC,MAAP,CAAcF,IAAd,CAAmBmB,KAAvB,CAA6B,CAA7B,EAAgC,CAAC,EAAjC;AAF6B,KAA9B,CAAd;AAID;;AAEDC,EAAAA,MAAM,GAAG;AACP,WAAO;AAAK,MAAA,KAAK,EAAExC,KAAZ;AAAmB,MAAA,EAAE,EAAC,KAAtB;AAA4B,MAAA,SAAS,EAAC,KAAtC;AAA4C,MAAA,GAAG,EAAC,KAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD;;AAlC+B;;AAqClC,eAAeK,GAAf","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nconst style = {\n  width: \"83.2vw\",\n  height: \"75vh\",\n  marginLeft: \"auto\",\n  marginRight: \"auto\",\n};\nclass Map extends React.Component {\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.location !== this.props.location) {\n      this.map.fitBounds(this.props.location.geometry.viewport);\n      this.marker.setPosition(this.props.location.geometry.location);\n      this.marker.setVisible(true);\n    }\n  }\n  componentDidMount() {\n    const maps = window.google.maps;\n    const mapRef = this.refs.map;\n    const node = ReactDOM.findDOMNode(mapRef);\n    let zoom = 14;\n    let lat = 37.774929;\n    let lng = -122.419416;\n    const center = new maps.LatLng(lat, lng);\n    const mapConfig = Object.assign(\n      {},\n      {\n        center: center,\n        zoom: zoom,\n        fullscreenControl: false,\n        streetViewControl: false,\n      }\n    );\n    this.map = new maps.Map(node, mapConfig);\n    this.marker = new window.google.maps.Marker({\n      map: this.map,\n      anchorPoint: new window.google.maps.Point(0, -29),\n    });\n  }\n\n  render() {\n    return <div style={style} id=\"map\" className=\"map\" ref=\"map\"></div>;\n  }\n}\n\nexport default Map;\n"]},"metadata":{},"sourceType":"module"}