{"ast":null,"code":"var _jsxFileName = \"/Users/saran/Documents/Google-Maps---React-js/src/components/AutoComplete.js\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport ListPrediction from \"./ListPrediction\";\nimport Input from \"@material-ui/core/Input\";\nimport ListHistory from \"./ListHistory\";\nimport Map from \"./Map\";\nimport onClickOutside from \"react-onclickoutside\";\nimport Paper from \"@material-ui/core/Paper\";\nimport \"../styles/index.css\";\nconst style = {\n  parent: {\n    position: \"relative\"\n  },\n  input: {\n    padding: 16\n  }\n};\n\nclass AutoComplete extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleClickOutside = evt => {\n      this.props.onBlur();\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      style: style.parent,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"autoComplete\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, React.createElement(Paper, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, React.createElement(Input, {\n      style: {\n        marginRight: 20,\n        color: \"white\"\n      },\n      placeholder: \"Search Places\",\n      fullWidth: true,\n      type: \"text\",\n      value: this.props.value,\n      onChange: e => this.props.onChange(e.target.value),\n      onFocus: this.props.onFocus,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    })), this.props.showHistory ? React.createElement(ListHistory, {\n      list: this.props.userHistory,\n      onClick: this.props.selectFromHistory,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }) : null, this.props.showPrediction ? React.createElement(ListPrediction, {\n      predictions: this.props.sugesstion,\n      onSelect: this.props.onSelect,\n      location: this.props.location,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }) : null), React.createElement(Map, {\n      location: this.props.location,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }));\n  }\n\n}\n\nAutoComplete.propTypes = {\n  onChange: PropTypes.func.isRequired,\n  value: PropTypes.string,\n  onFocus: PropTypes.func.isRequired,\n  sugesstion: PropTypes.array.isRequired,\n  onSelect: PropTypes.func.isRequired,\n  location: PropTypes.object.isRequired,\n  userHistory: PropTypes.array,\n  showHistory: PropTypes.bool.isRequired,\n  onBlur: PropTypes.func.isRequired,\n  selectFromHistory: PropTypes.func.isRequired,\n  showPrediction: PropTypes.bool.isRequired\n};\nAutoComplete.defaultProps = {\n  userHistory: []\n};\nexport default onClickOutside(AutoComplete);","map":{"version":3,"sources":["/Users/saran/Documents/Google-Maps---React-js/src/components/AutoComplete.js"],"names":["React","PropTypes","ListPrediction","Input","ListHistory","Map","onClickOutside","Paper","style","parent","position","input","padding","AutoComplete","Component","handleClickOutside","evt","props","onBlur","render","marginRight","color","value","e","onChange","target","onFocus","showHistory","userHistory","selectFromHistory","showPrediction","sugesstion","onSelect","location","propTypes","func","isRequired","string","array","object","bool","defaultProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAOC,cAAP,MAA2B,sBAA3B;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAO,qBAAP;AACA,MAAMC,KAAK,GAAG;AACZC,EAAAA,MAAM,EAAE;AACNC,IAAAA,QAAQ,EAAE;AADJ,GADI;AAIZC,EAAAA,KAAK,EAAE;AACLC,IAAAA,OAAO,EAAE;AADJ;AAJK,CAAd;;AAQA,MAAMC,YAAN,SAA2Bb,KAAK,CAACc,SAAjC,CAA2C;AAAA;AAAA;;AAAA,SACzCC,kBADyC,GACnBC,GAAD,IAAS;AAC5B,WAAKC,KAAL,CAAWC,MAAX;AACD,KAHwC;AAAA;;AAIzCC,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,KAAK,EAAEX,KAAK,CAACC,MAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AACE,MAAA,KAAK,EAAE;AAACW,QAAAA,WAAW,EAAC,EAAb;AAAgBC,QAAAA,KAAK,EAAC;AAAtB,OADT;AAEE,MAAA,WAAW,EAAC,eAFd;AAGE,MAAA,SAAS,MAHX;AAIE,MAAA,IAAI,EAAC,MAJP;AAKE,MAAA,KAAK,EAAE,KAAKJ,KAAL,CAAWK,KALpB;AAME,MAAA,QAAQ,EAAGC,CAAD,IAAO,KAAKN,KAAL,CAAWO,QAAX,CAAoBD,CAAC,CAACE,MAAF,CAASH,KAA7B,CANnB;AAOE,MAAA,OAAO,EAAE,KAAKL,KAAL,CAAWS,OAPtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,EAYG,KAAKT,KAAL,CAAWU,WAAX,GACC,oBAAC,WAAD;AACE,MAAA,IAAI,EAAE,KAAKV,KAAL,CAAWW,WADnB;AAEE,MAAA,OAAO,EAAE,KAAKX,KAAL,CAAWY,iBAFtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,GAKG,IAjBN,EAkBG,KAAKZ,KAAL,CAAWa,cAAX,GACC,oBAAC,cAAD;AACE,MAAA,WAAW,EAAE,KAAKb,KAAL,CAAWc,UAD1B;AAEE,MAAA,QAAQ,EAAE,KAAKd,KAAL,CAAWe,QAFvB;AAGE,MAAA,QAAQ,EAAE,KAAKf,KAAL,CAAWgB,QAHvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,GAMG,IAxBN,CADF,EA2BE,oBAAC,GAAD;AAAK,MAAA,QAAQ,EAAE,KAAKhB,KAAL,CAAWgB,QAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA3BF,CADF;AA+BD;;AApCwC;;AAuC3CpB,YAAY,CAACqB,SAAb,GAAyB;AACvBV,EAAAA,QAAQ,EAAEvB,SAAS,CAACkC,IAAV,CAAeC,UADF;AAEvBd,EAAAA,KAAK,EAAErB,SAAS,CAACoC,MAFM;AAGvBX,EAAAA,OAAO,EAAEzB,SAAS,CAACkC,IAAV,CAAeC,UAHD;AAIvBL,EAAAA,UAAU,EAAE9B,SAAS,CAACqC,KAAV,CAAgBF,UAJL;AAKvBJ,EAAAA,QAAQ,EAAE/B,SAAS,CAACkC,IAAV,CAAeC,UALF;AAMvBH,EAAAA,QAAQ,EAAEhC,SAAS,CAACsC,MAAV,CAAiBH,UANJ;AAOvBR,EAAAA,WAAW,EAAE3B,SAAS,CAACqC,KAPA;AAQvBX,EAAAA,WAAW,EAAE1B,SAAS,CAACuC,IAAV,CAAeJ,UARL;AASvBlB,EAAAA,MAAM,EAAEjB,SAAS,CAACkC,IAAV,CAAeC,UATA;AAUvBP,EAAAA,iBAAiB,EAAE5B,SAAS,CAACkC,IAAV,CAAeC,UAVX;AAWvBN,EAAAA,cAAc,EAAE7B,SAAS,CAACuC,IAAV,CAAeJ;AAXR,CAAzB;AAaAvB,YAAY,CAAC4B,YAAb,GAA4B;AAC1Bb,EAAAA,WAAW,EAAE;AADa,CAA5B;AAGA,eAAetB,cAAc,CAACO,YAAD,CAA7B","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport ListPrediction from \"./ListPrediction\";\nimport Input from \"@material-ui/core/Input\";\nimport ListHistory from \"./ListHistory\";\nimport Map from \"./Map\";\nimport onClickOutside from \"react-onclickoutside\";\nimport Paper from \"@material-ui/core/Paper\";\nimport \"../styles/index.css\";\nconst style = {\n  parent: {\n    position: \"relative\",\n  },\n  input: {\n    padding: 16,\n  },\n};\nclass AutoComplete extends React.Component {\n  handleClickOutside = (evt) => {\n    this.props.onBlur();\n  };\n  render() {\n    return (\n      <div style={style.parent}>\n        <div className=\"autoComplete\">\n          <Paper>\n            <Input\n              style={{marginRight:20,color:\"white\"}}\n              placeholder=\"Search Places\"\n              fullWidth\n              type=\"text\"\n              value={this.props.value}\n              onChange={(e) => this.props.onChange(e.target.value)}\n              onFocus={this.props.onFocus}\n            />\n          </Paper>\n          {this.props.showHistory ? (\n            <ListHistory\n              list={this.props.userHistory}\n              onClick={this.props.selectFromHistory}\n            />\n          ) : null}\n          {this.props.showPrediction ? (\n            <ListPrediction\n              predictions={this.props.sugesstion}\n              onSelect={this.props.onSelect}\n              location={this.props.location}\n            />\n          ) : null}\n        </div>\n        <Map location={this.props.location} />\n      </div>\n    );\n  }\n}\n\nAutoComplete.propTypes = {\n  onChange: PropTypes.func.isRequired,\n  value: PropTypes.string,\n  onFocus: PropTypes.func.isRequired,\n  sugesstion: PropTypes.array.isRequired,\n  onSelect: PropTypes.func.isRequired,\n  location: PropTypes.object.isRequired,\n  userHistory: PropTypes.array,\n  showHistory: PropTypes.bool.isRequired,\n  onBlur: PropTypes.func.isRequired,\n  selectFromHistory: PropTypes.func.isRequired,\n  showPrediction: PropTypes.bool.isRequired,\n};\nAutoComplete.defaultProps = {\n  userHistory: [],\n};\nexport default onClickOutside(AutoComplete);\n"]},"metadata":{},"sourceType":"module"}